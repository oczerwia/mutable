

TODO / Next steps

[*] For next meeting
[x] done
[ ] open

Diese Woche: 
    [x] Fix cardinality storage
    [x] Make histogram run
        [x] Change join size estimation
        [x] Implement function to adjust histogram to new cardinality (Use independence assumption to reduce each bucket)
    [ ] Extract estimated and extracted values
    [ ] Start running on server


NÃ¤chste Woche:
    [ ] LpBound


[ ] Features
    [ ] Util class for table names - names, columns, joined, etc.
    [ ] Store intermediate cards


[ ] Innovation
    [*] How to propagate ranges? UB: Recompute LpBound LB: ???
    [x] How to collapse ranges? - Expected value or upper bound
    [*] How to create lower bound?

[ ] Benchmark
    [x] For JOB light
    [*] Test on larger RAM
    [*] Scrape intermediate and final cardinalities
    [*] Get true cardinalities
    [*] Calculate error margin (q-error)
    [ ] Create new metric for accumulated intermediate error
    [ ] Benchmark wallclock time

[x] Statistics
    [x] Histogram generation
    [x] Selectivity generation
    [x] Histogram calculations
    [x] Selectivity calculations

[ ] estimator
    [x] Selectivity based estimator
    [*] Histogram based estimator and propagation: How and where do we change sizes, also, we need to adjust all histogram total counts based on the join. (table1.x = table2.x reduces size, so table1.y and table2.h must also be smaller)
    [ ] Propagation for Range Based estimator
    [ ] LpBound based estimator - Need to be able to extract subqueries (should be possible as it is an option)

[*] Lp Bound
    [*] Understand code 
    [*] Run code on benchmark
    [*] Adjust cardinality injection code
    [*] Inject Cardinalities into estimation
    [*] Intermediate cardinalities
    [*] Make LpBound runnable from mutables


[ ] Presentation
    [ ] Related work
    [ ] Visualization
    [ ] Core contribution

[ ] Writing
    [ ] Introduction
    [ ] Background
    [ ] Methodology
    [ ] Evaluation
    [ ] Related Work
    [ ] Conclusion


